<?xml version="1.0"?>

<!-- em_3905.urdf.xacro

This file defines a model of a Traxxas(R) E-Maxx(R) #3905 RC (Radio Controlled)
truck.

Lengths are measured in meters, angles are measured in radians, and masses are
measured in kilograms. All of these values are approximations.

To work with Gazebo, each link must have an inertial element, even if
the link only serves to connect two joints. To be visible in Gazebo, a link
must have a collision element. Furthermore, the link must have a Gazebo
material.

Traxxas(R), E-Maxx(R), and Titan(R) are registered trademarks of Traxxas
Management, LLC. em_3905.urdf.xacro was independently created by Wunderkammer
Laboratory, and neither em_3905.urdf.xacro nor Wunderkammer Laboratory is
affiliated with, sponsored by, approved by, or endorsed by Traxxas Management,
LLC. Mabuchi Motor(R) is a registered trademark of Mabuchi Motor Co., Ltd.
Corporation Japan. All other trademarks and service marks are the property of
their respective owners.

Copyright (c) 2011-2014 Wunderkammer Laboratory

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<robot name="em_3905" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Degree-to-radian conversions -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>

  <!-- chassis_length is measured along the x axis, chassis_width
       along the y axis, and chassis_height along the z axis. 
       The weith is an estimation of the chassis weight and the components,
       mainly the UR5e (20 kg)-->
  <xacro:property name="chassis_length" value="1.3"/>
  <xacro:property name="chassis_width" value="0.797"/>
  <xacro:property name="chassis_height" value="0.3"/>
  <xacro:property name="chassis_mass" value="2.788"/>


  <!-- hub_dia and tire_dia are the diameters of the hub and tire,
       respectively. It is set so that each wheel
       is a "zero offset" wheel. -->
  <xacro:property name="hub_dia_front" value="0.175"/>
  <xacro:property name="tire_dia_front" value="0.28"/>
  <xacro:property name="tire_width_front" value="0.12"/>

  <xacro:property name="hub_dia_rear" value="0.235"/>
  <xacro:property name="tire_dia_rear" value="0.38"/>
  <xacro:property name="tire_width_rear" value="0.15"/>

  <xacro:property name="wheel_mass" value="0.29"/>

  <xacro:property name="wheel_travel" value="0.042"/>

  <!-- shock_eff_limit is 2 * ((shock_stroke / 2) * shock_spring_constant) N.
       shock_stroke is 0.028575 meters. shock_spring_constant, an approximation
       of a Traxxas Ultra Shock shock absorber spring's constant, is
       437.817 N/m. -->
  <xacro:property name="shock_eff_limit" value="125.106"/>
  <xacro:property name="shock_vel_limit" value="1000"/>

  <!-- The specifications for a Titan(R) 550 motor could not be found, so the
       stall torque of a Mabuchi Motor(R) RS-550VC-7525 motor was used instead.

       num_spur_gear_teeth = 68
       num_pinion_gear_teeth = 19
       final_gear_ratio = (num_spur_gear_teeth / num_pinion_gear_teeth) *
         5.22 = 18.68
       stall_torque = 0.549 N m
       axle_eff_limit = ((2 * stall_torque) * final_gear_ratio) / 4 =
         5.12766 N m

       max_speed = 40 mph (30+ mph) = 17.8816 m/s
       axle_vel_limit = (2 * pi) * (max_speed / (pi * tire_dia)) =
         244.8696 rad/s -->
  <xacro:property name="axle_eff_limit" value="51.2766"/>
  <xacro:property name="axle_vel_limit" value="244.8696"/>

  <!-- These constants are used to simulate a Traxxas 2056 servo operated at
       6 V. servo_stall_torque is measured in N m. servo_no_load_speed is
       measured in rad/s. -->
  <xacro:property name="servo_stall_torque" value="5.649"/>
  <xacro:property name="servo_no_load_speed" value="4.553"/>

  <material name="blue">
     <color rgba="0 0 0.8 1"/>
   </material>
   <material name="gray">
    <color rgba="0.5 0.5 0.5 1.0"/>
   </material>   
   <material name="flat_black">
    <color rgba="0 0 0 1"/>
   </material> 


  <!-- Null inertial element. This is needed to make the model work with
       Gazebo. -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="thick_walled_tube_inertial"
               params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               ixy="0" ixz="0"
               iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               iyz="0"
               izz="${mass * (inner_rad * inner_rad +
                    outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>

  <!-- base_link must have geometry so that its axes can be displayed in
       rviz. -->
  <link name="base_link"/>

  <joint name="base_link_to_chassis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0.15" rpy="0 0 0" />
  </joint>

  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/base_alero.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://blue_description/meshes/base_alero.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.54 0 0.2" rpy="0 0 0" /> 
      <mass value="${chassis_mass}"/>
      <inertia ixx="${chassis_mass * (chassis_length * chassis_length + chassis_height * chassis_height) / 12}"
               ixy="0" ixz="0"
               iyy="${chassis_mass * (chassis_width * chassis_width + chassis_height * chassis_height) / 12}"
               iyz="0"
               izz="${chassis_mass * (chassis_width * chassis_width + chassis_length * chassis_length) / 12}"/>
    </inertial>
  </link>

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!--Left front wheel-->
  <joint name="left_front_shock" type="prismatic">
    <parent link="chassis" />
    <child link = "left_front_axis" />
    <origin xyz="1.08 0 0.05" rpy="0 0 0" />
    <axis xyz="0 0 1"/>
    <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
      effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
  </joint>
  <transmission name="left_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_shock_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="left_front_axis">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/eje_delantero_i.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="left_front_axis">
    <material>Gazebo/Gray</material>
  </gazebo>

  <link name="left_steering_link">
      <xacro:null_inertial/>
    </link>

  <joint name="left_steering_joint" type="revolute">
    <parent link="left_front_axis"/>
    <child link="left_steering_link"/>
    <origin xyz="0 0.4 0" rpy="0 0 0" />
    <limit lower="${-degrees_45}" upper="${degrees_45}"
            effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
    <axis xyz="0 0 1"/>
  </joint>
  <transmission name="left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_steering_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <joint name="left_front_axle" type="continuous">
    <parent link="left_steering_link" />
    <child link = "left_front_wheel" />
    <axis xyz="0 1 0"/>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>

  <transmission name="left_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_axle_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <link name="left_front_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 3.14" />
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_delantera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="flat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 3.14" />
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_delantera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia_front / 2}" outer_rad="${tire_dia_front / 2}"
          height="${tire_width_front}" mass="${wheel_mass}"/>
  </link>

  <gazebo reference="left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="left_disk_joint" type="fixed">
    <parent link="left_front_wheel" />
    <child link = "left_disk" />
    <origin xyz="0 0.01 0" rpy="0 0 0" />
  </joint>

  <link name="left_disk">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/aro_delantero.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="left_disk">
    <material>Gazebo/Gray</material>
  </gazebo>

<!--Right front wheel-->
  <joint name="right_front_shock" type="prismatic">
    <parent link="chassis" />
    <child link = "right_front_axis" />
    <origin xyz="1.08 0 0.05" rpy="0 0 0" />
    <axis xyz="0 0 1"/>
    <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
      effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
  </joint>
  <transmission name="right_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_shock_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_front_axis">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/eje_delantero_d.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="right_front_axis">
    <material>Gazebo/Gray</material>
  </gazebo>

  <link name="right_steering_link">
      <xacro:null_inertial/>
    </link>

  <joint name="right_steering_joint" type="revolute">
    <parent link="right_front_axis"/>
    <child link="right_steering_link"/>
    <origin xyz="0 -0.4 0" rpy="0 0 0" />
    <limit lower="${-degrees_45}" upper="${degrees_45}"
            effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
    <axis xyz="0 0 1"/>
  </joint>
  <transmission name="right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_steering_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <joint name="right_front_axle" type="continuous">
    <parent link="right_steering_link" />
    <child link = "right_front_wheel" />
    <axis xyz="0 1 0"/>
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>

  <transmission name="right_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_axle_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_front_wheel">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_delantera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="flat_black"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_delantera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia_front / 2}" outer_rad="${tire_dia_front / 2}"
          height="${tire_width_front}" mass="${wheel_mass}"/>
  </link>

  <gazebo reference="right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="right_disk_joint" type="fixed">
    <parent link="right_front_wheel" />
    <child link = "right_disk" />
    <origin xyz="0 -0.01 0" rpy="0 0 0" />
  </joint>

  <link name="right_disk">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/aro_delantero.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="right_disk">
    <material>Gazebo/Gray</material>
  </gazebo>

  <!--Left rear wheel-->
  <joint name="left_rear_shock" type="prismatic">
    <parent link="chassis" />
    <child link = "left_rear_axis" />
    <origin xyz="0 0 0.06" rpy="0 0 0" />
    <axis xyz="0 0 1"/>
    <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
      effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
  </joint>
  <transmission name="left_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_shock_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="left_rear_axis">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/eje_trasero_i.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="left_rear_axis">
    <material>Gazebo/Gray</material>
  </gazebo>


  <joint name="left_rear_axle" type="continuous">
    <parent link="left_rear_axis" />
    <child link = "left_rear_wheel" />
    <axis xyz="0 1 0"/>
    <origin xyz="0 0.35 0" rpy="0 0 0" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>

  <transmission name="left_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_axle_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="left_rear_wheel">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_trasera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="flat_black"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_trasera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <xacro:thick_walled_tube_inertial
        inner_rad="${hub_dia_rear / 2}" outer_rad="${tire_dia_rear / 2}"
        height="${tire_width_rear}" mass="${wheel_mass}"/>
  </link>

  <gazebo reference="left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <!--Right rear wheel-->
  <joint name="right_rear_shock" type="prismatic">
    <parent link="chassis" />
    <child link = "right_rear_axis" />
    <origin xyz="0 0 0.06" rpy="0 0 0" />
    <axis xyz="0 0 1"/>
    <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
      effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
  </joint>
  <transmission name="right_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_shock_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_rear_axis">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/eje_trasero_d.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="right_rear_axis">
    <material>Gazebo/Gray</material>
  </gazebo>


  <joint name="right_rear_axle" type="continuous">
    <parent link="right_rear_axis" />
    <child link = "right_rear_wheel" />
    <axis xyz="0 1 0"/>
    <origin xyz="0 -0.35 0" rpy="0 0 0" />
    <limit effort="${axle_eff_limit}" velocity="${axle_vel_limit}"/>
  </joint>

  <transmission name="right_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_axle_act">
      <!-- This hardwareInterface element exists for compatibility
            with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_rear_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 3.14" />
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_trasera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="flat_black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 3.14" />
      <geometry>
        <mesh filename="package://blue_description/meshes/rueda_trasera.stl" scale="0.001 0.001 0.001"/> 
      </geometry>
    </collision>
    <xacro:thick_walled_tube_inertial
          inner_rad="${hub_dia_rear / 2}" outer_rad="${tire_dia_rear / 2}"
          height="${tire_width_rear}" mass="${wheel_mass}"/>
  </link>

  <gazebo reference="right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>


  <!--Velodyne-->             
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="velodyneLink" name="velodyne" topic="velodyne_points" hz="10" samples="450" gpu="true">
    <origin xyz="0 0 0.55" rpy="0.01 0.02 0" />
  </xacro:VLP-16>

  <joint name="velodyne_joint" type="fixed">
    <parent link="chassis" />
    <child link = "velodyneLink" />
    <origin xyz="0.58 0 0.24" rpy="0 0 0" />
  </joint>

  <link name="velodyneLink">
    <visual>
      <geometry>
        <mesh filename="package://blue_description/meshes/velodyne.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <xacro:null_inertial/>
  </link>

  <gazebo reference="velodyneLink">
    <material>Gazebo/Gray</material>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
  </gazebo>
  
  <gazebo>      
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps" >
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>fix</topicName>
      <velocityTopicName>fix_vel</velocityTopicName>
      <referenceLatitude>38.385</referenceLatitude>
      <referenceLongitude>-0.515</referenceLongitude>
      <drift>0.1 0.1 0.1</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>right_rear_axle</leftJoint>
      <rightJoint>left_rear_axle</rightJoint>
      <wheelSeparation>0.62</wheelSeparation>
      <wheelDiameter>0.36</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel_aux</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
  
  <gazebo>      
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu" >
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu</topicName>
      <accelDrift>1.0 1.0 1.0</accelDrift>
      <rateDrift>1.0 1.0 1.0</rateDrift>
      <yawDrift>1.0</yawDrift>
      <gaussianNoise>0.1</gaussianNoise>
    </plugin>
    
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth</topicName>
      <gaussianNoise>0</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>

  </gazebo>
  
</robot>